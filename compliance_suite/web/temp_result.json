[{"total_tests_passed": 25, "total_tests_skipped": 0, "total_tests": 25, "server": "http://localhost:5000/", "total_tests_failed": 0, "date_time": "2018-08-06 23:07:44.364336", "total_warnings": 0, "test_results": [{"name": "test_info_implement", "parents": ["test_base_algorithm"], "test_description": "Test to check if info-endpoint returns 200 OK with appropriate headers", "children": ["test_info_implement_default", "test_info_circular", "test_info_algorithms", "test_info_subsequence", "test_info_api_version"], "warning": false, "result": 1, "text": "Info endpoint implemented by the server"}, {"name": "test_info_implement_default", "parents": ["test_info_implement"], "test_description": "Test to check if info-endpoint returns 200 OK without headers", "children": [], "warning": false, "result": 1, "text": "Info endpoint implemented with default encoding"}, {"name": "test_info_circular", "parents": ["test_info_implement"], "test_description": "Test to check if info-endpoint has circular in the reponse object. And if it is there it upates session_params['circular'] as per the value", "children": ["test_metadata_query_circular_sequence"], "warning": false, "result": 1, "text": "circular key in info response object"}, {"name": "test_metadata_query_circular_sequence", "parents": ["test_metadata_implement", "test_info_circular"], "test_description": "Test if metadata endpoint returns 200 using circular test sequence if the server supports circular sequences. Value stored in session_params. If not skip test and set skip text appropriately", "children": [], "warning": false, "result": 1, "text": "Circular sequence metadata can be retrived"}, {"name": "test_info_algorithms", "parents": ["test_info_implement"], "test_description": "Test to check if info-endpoint has algorithms in the reponse object. And if it is there it upates session_params['trunc512'] as per the value", "children": ["test_metadata_query_by_trunc512", "test_metadata_trunc512", "test_sequence_query_by_trunc512"], "warning": false, "result": 1, "text": "algorithms key in info response object"}, {"name": "test_metadata_query_by_trunc512", "parents": ["test_metadata_implement", "test_info_algorithms"], "test_description": "Test if metadata endpoint returns 200 using trunc512 with I test sequence if the server supports. Value stored in session_params. If not skip test and set skip text appropriately", "children": [], "warning": false, "result": 1, "text": "TRUNC512 algorithm is working in the server for metadata endpoint"}, {"name": "test_metadata_trunc512", "parents": ["test_metadata_implement", "test_info_algorithms"], "test_description": "Test if trunc512 in metadata repsonse object. Skip if server does not support trunc512", "children": [], "warning": false, "result": 1, "text": "trunc512 key in metadata response object"}, {"name": "test_sequence_query_by_trunc512", "parents": ["test_sequence_implement", "test_info_algorithms"], "test_description": "Test to check if server returns 200 using I test sequence trunc512 and appropriate headers if the server supports trunc512", "children": [], "warning": false, "result": 1, "text": "TRUNC512 algorithm is working in the server for sequence endpoint"}, {"name": "test_info_subsequence", "parents": ["test_info_implement"], "test_description": "Test to check if info-endpoint has subsequence_limit in the reponse object. And if it is there it upates session_params['subsequence_limit'] as per the value", "children": [], "warning": false, "result": 1, "text": "subsequence_limit key in info response object"}, {"name": "test_info_api_version", "parents": ["test_info_implement"], "test_description": "Test to check if info-endpoint has supported_api_versions in the reponse object.", "children": [], "warning": false, "result": 1, "text": "supported_api_versions key in info response object"}, {"name": "test_metadata_implement", "parents": ["test_base_algorithm"], "test_description": "Test if metadata endpoint returns 200 with appropriate headers using I test sequence", "children": ["test_metadata_implement_default", "test_metadata_query_by_trunc512", "test_metadata_query_circular_sequence", "test_metadata_md5", "test_metadata_trunc512", "test_metadata_length", "test_metadata_aliases", "test_metadata_invalid_checksum_404_error", "test_metadata_invalid_encoding_415_error"], "warning": false, "result": 1, "text": "Metadata endpoint implemented by the server"}, {"name": "test_metadata_implement_default", "parents": ["test_metadata_implement"], "test_description": "Test if metadata endpoint returns 200 without headers using I test sequence", "children": [], "warning": false, "result": 1, "text": "Metadata endpoint implemented with default encoding"}, {"name": "test_metadata_md5", "parents": ["test_metadata_implement"], "test_description": "Test if md5 in metadata repsonse object", "children": [], "warning": false, "result": 1, "text": "md5 key in metadata response object"}, {"name": "test_metadata_length", "parents": ["test_metadata_implement"], "test_description": "Test if length in metadata repsonse object", "children": [], "warning": false, "result": 1, "text": "length key in metadata response object"}, {"name": "test_metadata_aliases", "parents": ["test_metadata_implement"], "test_description": "Test if aliases in metadata repsonse object", "children": [], "warning": false, "result": 1, "text": "aliases key in metadata response object"}, {"name": "test_metadata_invalid_checksum_404_error", "parents": ["test_metadata_implement"], "test_description": "Test if 404 on invalid checksum in metadata repsonse", "children": [], "warning": false, "result": 1, "text": "Server is correctly sending 404 on invalid checksum"}, {"name": "test_metadata_invalid_encoding_415_error", "parents": ["test_metadata_implement"], "test_description": "Test if 415 on invalid encoding in Accept header", "children": [], "warning": false, "result": 1, "text": "Server is correctly sending 415 on invalid encoding"}, {"name": "test_sequence_implement", "parents": ["test_base_algorithm"], "test_description": "Test to check if server returns 200 using I test sequence and appropriate headers", "children": ["test_sequence_implement_default", "test_sequence_start_end", "test_sequence_range", "test_sequence_query_by_trunc512", "test_sequence_invalid_checksum_404_error", "test_sequence_invalid_encoding_415_error"], "warning": false, "result": 1, "text": "Sequence endpoint implemented in the server"}, {"name": "test_sequence_implement_default", "parents": ["test_sequence_implement"], "test_description": "Test to check if server returns 200 using I test sequence and no headers", "children": [], "warning": false, "result": 1, "text": "Sequence endpoint implemented with default encoding"}, {"name": "test_sequence_start_end", "parents": ["test_sequence_implement"], "test_description": "Test to check if server returns 200 and appropriate text using I test sequence and start/end query params set to 10 and 20 repectively", "children": ["test_sequence_start_end_success_cases"], "warning": false, "result": 1, "text": "Server supports start end query params"}, {"name": "test_sequence_start_end_success_cases", "parents": ["test_sequence_start_end"], "test_description": "Test to check if server passes all the edge cases related to success queries using start/end params", "children": [], "warning": false, "result": 1, "text": "Server passed all the success edge cases with start end query params"}, {"name": "test_sequence_range", "parents": ["test_sequence_implement"], "test_description": "Test to check if server returns 200 and appropriate text using I test sequence and range header set to 10 and 19 repectively", "children": ["test_sequence_range_success_cases"], "warning": false, "result": 1, "text": "Server supports range header"}, {"name": "test_sequence_range_success_cases", "parents": ["test_sequence_range"], "test_description": "Test to check if server passesall the edge cases related to range header success queries", "children": [], "warning": false, "result": 1, "text": "Server passed all the success edge cases with range header query"}, {"name": "test_sequence_invalid_checksum_404_error", "parents": ["test_sequence_implement"], "test_description": "Test to check if server returns 404 using some garbage checksum and appropriate headers", "children": [], "warning": false, "result": 1, "text": "Server is correctly sending 404 on invalid checksum"}, {"name": "test_sequence_invalid_encoding_415_error", "parents": ["test_sequence_implement"], "test_description": "Test to check if server returns 200 using I test sequence and grabage encoding in Accept header", "children": [], "warning": false, "result": 1, "text": "Server is correctly sending 415 on invalid encoding"}]}]