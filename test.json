[{"total_tests": 25, "total_tests_skipped": 0, "total_warnings": 0, "total_tests_passed": 25, "server": "http://localhost:5000/", "date_time": "2018-08-03 00:56:39.919970", "test_results": [{"text": "Info endpoint implemented by the server", "parents": ["test_base_algorithm"], "children": ["test_info_implement_default", "test_info_circular", "test_info_algorithms", "test_info_subsequence", "test_info_api_version"], "result": 1, "test_description": "\n    Test to check if info-endpoint returns 200 OK with appropriate headers\n    ", "name": "test_info_implement"}, {"text": "Info endpoint implemented with default encoding", "parents": ["test_info_implement"], "children": [], "result": 1, "test_description": "\n    Test to check if info-endpoint returns 200 OK without headers\n    ", "name": "test_info_implement_default"}, {"text": "\"circular\" key in info response object", "parents": ["test_info_implement"], "children": ["test_metadata_query_circular_sequence"], "result": 1, "test_description": "\n    Test to check if info-endpoint has circular in the reponse object. And if\n    it is there it upates session_params['circular'] as per the value\n    ", "name": "test_info_circular"}, {"text": "Circular sequence metadata can be retrived", "parents": ["test_metadata_implement", "test_info_circular"], "children": [], "result": 1, "test_description": "\n    Test if metadata endpoint returns 200 using circular test sequence\n    if the server supports circular sequences. Value stored in session_params.\n    If not skip test and set skip text appropriately\n    ", "name": "test_metadata_query_circular_sequence"}, {"text": "\"algorithms\" key in info response object", "parents": ["test_info_implement"], "children": ["test_metadata_query_by_trunc512", "test_metadata_trunc512", "test_sequence_query_by_trunc512"], "result": 1, "test_description": "\n    Test to check if info-endpoint has algorithms in the reponse object. And if\n    it is there it upates session_params['trunc512'] as per the value\n    ", "name": "test_info_algorithms"}, {"text": "TRUNC512 algorithm is working in the server for metadata endpoint", "parents": ["test_metadata_implement", "test_info_algorithms"], "children": [], "result": 1, "test_description": "\n    Test if metadata endpoint returns 200 using trunc512 with I test sequence\n    if the server supports. Value stored in session_params. If not skip test\n    and set skip text appropriately\n    ", "name": "test_metadata_query_by_trunc512"}, {"text": "\"trunc512\" key in metadata response object", "parents": ["test_metadata_implement", "test_info_algorithms"], "children": [], "result": 1, "test_description": "\n    Test if trunc512 in metadata repsonse object. Skip if server does not\n    support trunc512\n    ", "name": "test_metadata_trunc512"}, {"text": "TRUNC512 algorithm is working in the server for sequence endpoint", "parents": ["test_sequence_implement", "test_info_algorithms"], "children": [], "result": 1, "test_description": "Test to check if server returns 200 using I test sequence trunc512 and\n    appropriate headers if the server supports trunc512\n    ", "name": "test_sequence_query_by_trunc512"}, {"text": "\"subsequence_limit\" key in info response object", "parents": ["test_info_implement"], "children": [], "result": 1, "test_description": "\n    Test to check if info-endpoint has subsequence_limit in the reponse object.\n    And if it is there it upates session_params['subsequence_limit'] as per the\n    value\n    ", "name": "test_info_subsequence"}, {"text": "\"supported_api_versions\" key in info response object", "parents": ["test_info_implement"], "children": [], "result": 1, "test_description": "\n    Test to check if info-endpoint has supported_api_versions in the reponse\n    object.\n    ", "name": "test_info_api_version"}, {"text": "Metadata endpoint implemented by the server", "parents": ["test_base_algorithm"], "children": ["test_metadata_implement_default", "test_metadata_query_by_trunc512", "test_metadata_query_circular_sequence", "test_metadata_md5", "test_metadata_trunc512", "test_metadata_length", "test_metadata_aliases", "test_metadata_invalid_checksum_404_error", "test_metadata_invalid_encoding_415_error"], "result": 1, "test_description": "\n    Test if metadata endpoint returns 200 with appropriate headers using I test\n    sequence\n    ", "name": "test_metadata_implement"}, {"text": "Metadata endpoint implemented with default encoding", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if metadata endpoint returns 200 without headers using I test sequence\n    ", "name": "test_metadata_implement_default"}, {"text": "\"md5\" key in metadata response object", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if md5 in metadata repsonse object\n    ", "name": "test_metadata_md5"}, {"text": "\"length\" key in metadata response object", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if length in metadata repsonse object\n    ", "name": "test_metadata_length"}, {"text": "\"aliases\" key in metadata response object", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if aliases in metadata repsonse object\n    ", "name": "test_metadata_aliases"}, {"text": "Server is correctly sending 404 on invalid checksum", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if 404 on invalid checksum in metadata repsonse\n    ", "name": "test_metadata_invalid_checksum_404_error"}, {"text": "Server is correctly sending 415 on invalid encoding", "parents": ["test_metadata_implement"], "children": [], "result": 1, "test_description": "\n    Test if 415 on invalid encoding in Accept header\n    ", "name": "test_metadata_invalid_encoding_415_error"}, {"text": "Sequence endpoint implemented in the server", "parents": ["test_base_algorithm"], "children": ["test_sequence_implement_default", "test_sequence_start_end", "test_sequence_range", "test_sequence_query_by_trunc512", "test_sequence_invalid_checksum_404_error", "test_sequence_invalid_encoding_415_error"], "result": 1, "test_description": "Test to check if server returns 200 using I test sequence and\n    appropriate headers\n    ", "name": "test_sequence_implement"}, {"text": "Sequence endpoint implemented with default encoding", "parents": ["test_sequence_implement"], "children": [], "result": 1, "test_description": "Test to check if server returns 200 using I test sequence and\n    no headers\n    ", "name": "test_sequence_implement_default"}, {"text": "Server supports start end query params", "parents": ["test_sequence_implement"], "children": ["test_sequence_start_end_success_cases"], "result": 1, "test_description": "Test to check if server returns 200 and appropriate text using I test\n    sequence and start/end query params set to 10 and 20 repectively\n    ", "name": "test_sequence_start_end"}, {"text": "Server passed all the success edge cases with start end query params", "parents": ["test_sequence_start_end"], "children": [], "result": 1, "test_description": "Test to check if server passes all the edge cases related to success\n    queries using start/end params\n    ", "name": "test_sequence_start_end_success_cases"}, {"text": "Server supports range header", "parents": ["test_sequence_implement"], "children": ["test_sequence_range_success_cases"], "result": 1, "test_description": "Test to check if server returns 200 and appropriate text using I test\n    sequence and range header set to 10 and 19 repectively\n    ", "name": "test_sequence_range"}, {"text": "Server passed all the success edge cases with range header query", "parents": ["test_sequence_range"], "children": [], "result": 1, "test_description": "Test to check if server passesall the edge cases related to range header\n    success queries\n    ", "name": "test_sequence_range_success_cases"}, {"text": "Server is correctly sending 404 on invalid checksum", "parents": ["test_sequence_implement"], "children": [], "result": 1, "test_description": "Test to check if server returns 404 using some garbage checksum and\n    appropriate headers\n    ", "name": "test_sequence_invalid_checksum_404_error"}, {"text": "Server is correctly sending 415 on invalid encoding", "parents": ["test_sequence_implement"], "children": [], "result": 1, "test_description": "Test to check if server returns 200 using I test sequence and\n    grabage encoding in Accept header\n    ", "name": "test_sequence_invalid_encoding_415_error"}], "total_tests_failed": 0}]